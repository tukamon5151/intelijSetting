<templateSet group="React">
  <template name="rfc" value="// ===&#10;// @modules&#10;&#10;// ===&#10;// @interface&#10;&#10;interface Props {&#10;}&#10;&#10;// ===&#10;// @view&#10;export const $TM_FILENAME_BASE$: React.VFC&lt;Props&gt; = props =&gt; {&#10;  return (&#10;  )&#10;};" description="Typescript React Function Component boilerplate" toReformat="false" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="emotion" value="/** @jsx jsx */&#10;import { jsx } from '@emotion/core';&#10;import styled from '@emotion/styled';" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="npage" value="// ===&#10;// @modules&#10;// ===&#10;import { GetStaticProps, GetStaticPaths, GetServerSideProps, NextPage } from 'next';&#10;&#10;// ===&#10;// @Types&#10;// ===&#10;&#10;&#10;// ===&#10;// @Component&#10;// ===&#10;&#10;const $TM_FILENAME_BASE$: NextPage = () =&gt; {&#10;  return (&#10;    &lt;div&gt;&lt;/div&gt;&#10;  )&#10;}&#10;&#10;// ===&#10;// @export&#10;// ===&#10;&#10;export const getStaticProps: GetStaticProps = async (context) =&gt; {&#10;}&#10;&#10;export const getStaticPaths: GetStaticPaths = async () =&gt; {&#10;}&#10;&#10;export const getServerSideProps: GetServerSideProps = async (context) =&gt; {&#10;}&#10;&#10;export default $TM_FILENAME_BASE$" toReformat="false" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="napi" value="import { NextApiRequest, NextApiResponse } from 'next'&#10;&#10;export default async function handle(req: NextApiRequest, res: NextApiResponse) {&#10;  res.status(404).end()&#10;}" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>